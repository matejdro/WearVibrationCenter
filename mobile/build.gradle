buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath libs.fabricGradle
    }
}
apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "com.matejdro.wearvibrationcenter"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 18
        versionName "1.2.2"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        wearAppUnbundled true
    }
    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        disable 'GradleCompatible'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':wearutils')
    implementation libs.androidx.appCompat
    implementation libs.androidx.cardView
    implementation libs.androidx.percentLayout
    implementation libs.androidx.preference
    implementation libs.google.material
    implementation libs.google.wearableLibrary
    implementation libs.licensesDialog

    // This must be here to prevent build from complaining since included library also includes
    // wearable support. Of course phone does not have wearable features.
    compileOnly libs.google.wearableLibrary

    implementation libs.google.playServices.wearable
}

allprojects {
    def keystoreProperties = rootProject.file('keystore.properties')
    def debugConfig = 'debug'

    if (keystoreProperties.exists() && android.signingConfigs.hasProperty(debugConfig)) {
        def props = new Properties()
        props.load(new FileInputStream(keystoreProperties))
        android.signingConfigs[debugConfig].storeFile = file(props['storeFile'])
        android.signingConfigs[debugConfig].storePassword = props['storePassword']
        android.signingConfigs[debugConfig].keyAlias = props['keyAlias']
        android.signingConfigs[debugConfig].keyPassword = props['keyPassword']
    }
}
