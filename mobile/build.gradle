buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.24.3'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.matejdro.wearvibrationcenter"
        minSdkVersion 18
        targetSdkVersion 27
        versionCode 13
        versionName "1.0.8"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(path: ':wear', configuration: 'wear1Release')
    compile project(':common')
    compile project(':wearutils')
    compile 'com.android.support:appcompat-v7:27.0.0'
    compile 'com.android.support:cardview-v7:27.0.0'
    compile 'com.android.support:design:27.0.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true
    }
    compile 'de.psdev.licensesdialog:licensesdialog:1.8.0'
}

allprojects {
    afterEvaluate { project ->
        def keystoreProperties = rootProject.file('keystore.properties')
        def debugConfig = 'debug'

        if (keystoreProperties.exists() && android.signingConfigs.hasProperty(debugConfig)) {
            def props = new Properties()
            props.load(new FileInputStream(keystoreProperties))
            android.signingConfigs[debugConfig].storeFile = file(props['storeFile'])
            android.signingConfigs[debugConfig].storePassword = props['storePassword']
            android.signingConfigs[debugConfig].keyAlias = props['keyAlias']
            android.signingConfigs[debugConfig].keyPassword = props['keyPassword']
        }
    }
}